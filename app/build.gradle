apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.google.gms:google-services:3.1.0'
    }
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.ifeins.tenbismonit"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 190010000
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }
        setProperty('archivesBaseName', 'tenbis-monitor')
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${archivesBaseName}-${variant.name}-${variant.versionName}.apk"
        }
    }
}

ext {
    supportLibVersion = '27.1.0'
    firebaseVersion = '15.0.0'
    firebaseUiVersion = '3.3.1'
    testingSupportLibVersion = '1.0.1'
    espressoLibVersion = '3.0.1'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:cardview-v7:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.1'
    // Firebase
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
    implementation "com.google.firebase:firebase-core:${firebaseVersion}"
    implementation "com.firebaseui:firebase-ui-firestore:${firebaseUiVersion}"
    implementation "com.firebaseui:firebase-ui-auth:${firebaseUiVersion}"
    // 3rd party
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.5'
    implementation 'com.facebook.fresco:fresco:1.8.0'
    // Tests
    implementation "com.android.support:support-v4:${supportLibVersion}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation "com.android.support.test:runner:${testingSupportLibVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${espressoLibVersion}"
}

apply plugin: 'com.google.gms.google-services'
